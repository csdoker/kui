@import '../../assets/styles/variables.scss';

$button-size-map: (xs: (fontSize: $font-size-xs, padding:$space-xs $space-sm),
  sm: (fontSize: $font-size-sm, padding:$space-sm $space-base
  ),
  lg: (fontSize: $font-size-lg, padding:$space-base+2 $space-lg),
);

.#{$namespace}-button {
  vertical-align: middle;
  text-align: center;
  position: relative;
  outline: 0;
  border-collapse: collapse;
  border: 1px solid $border-color;
  padding: $space-base $space-lg;
  margin: 0 $space-sm;
  cursor: pointer;
  text-shadow: none;
  text-indent: 0;
  border-radius: $radius-base;
  background-color: transparent;
  color: $text-color-primary;
  font-size: $font-size-base;

  &:hover:not(:disabled) {
    background: $button-hover-bg-color;
    color: $button-hover-font-color;
    border-color: $button-hover-border-color;
  }

  &:active:not(:disabled) {
    background: $button-active-bg-color;
    color: $button-active-font-color;
    border-color: $button-active-border-color;
  }


  &__icon {
    margin-right: $space-sm;
  }

  &__content {
    flex: 1
  }

  &:disabled {
    opacity: .4;
    cursor: not-allowed;
  }

  @each $color,
  $value in $colors {
    &--#{$color} {
      background: $value;
      color: $white;
      border-color: $value;

      &:hover:not(:disabled) {
        background: lighten($value, 10);
        border-color: lighten($value, 10);
        color: $white;
      }

      &:active:not(:disabled) {
        background: darken($value, 10);
        border-color: darken($value, 10);
        color: $white;
      }

    }
  }

  @each $size,
  $value in $button-size-map {
    &--#{$size} {
      padding: map-get($value, 'padding');
      font-size: map-get($value, 'fontSize');
    }
  }



}